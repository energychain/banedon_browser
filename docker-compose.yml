version: '3.8'

services:
  browser-automation-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3010:3010"
    environment:
      - NODE_ENV=production
      - PORT=3010
      - SESSION_TIMEOUT=1800000
      - COMMAND_TIMEOUT=30000
      - LOG_LEVEL=info
      - ALLOWED_ORIGINS=http://10.0.0.2:3010,https://10.0.0.2:3010,chrome-extension://,moz-extension://
    volumes:
      # Mount logs directory for persistence
      - ./logs:/app/logs
      # Remove source mount for production
      # - ./src:/app/src
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const req = http.request({hostname: 'localhost', port: 3010, path: '/health'}, (res) => process.exit(res.statusCode === 200 ? 0 : 1)); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - browser-automation-service
    restart: unless-stopped
    profiles:
      - production

volumes:
  logs:
    driver: local
